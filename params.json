{"name":"Android-slideshow-widget","tagline":"A set of widgets to create smooth slideshows with ease.","body":"Android SlideShow Widget\r\n========================\r\n\r\nA set of widgets to create smooth slide shows with ease. The slide show components are fully \r\ncustomizable and are not limited to pictures, you can slide whatever you want to (texts, etc.).\r\n\r\n## Demo\r\n\r\nA demo of the widget is worth a thousand words. You can download it for free on Google Play.\r\n\r\n<a href=\"https://play.google.com/store/apps/details?id=com.marvinlabs.widget.slideshow.demo\">\r\n  <img alt=\"Demo on Google Play\"\r\n         src=\"http://developer.android.com/images/brand/en_generic_rgb_wo_60.png\" />\r\n</a>\r\n\r\n## Usage\r\n\r\n### Including the library\r\n\r\nThe easiest way to get the library included in your project is by using Gradle. Simply add the \r\nfollowing line to your dependencies block:\r\n\r\n    dependencies {\r\n        compile 'com.marvinlabs:android-slideshow-widget:0.1.+@aar'\r\n    }\r\n    \r\nOf course, you can replace the version number by whichever version you need (you can have a look at \r\nthis repository's tags to know which is the latest).\r\n\r\n### Getting a slide show in your fragment/activity\r\n\r\nTo include a slide show in your layout, simply use the following XML code snippet:\r\n\r\n    <com.marvinlabs.widget.slideshow.SlideShowView\r\n        android:id=\"@+id/slideshow\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\" />\r\n\r\nYou can then get the `SlideShowView` using the usual technique:\r\n\r\n    slideShowView = (SlideShowView) findViewById(R.id.slideshow);\r\n\r\nThe next step is to create the adapter that will bind your slide data to actual views. This is a \r\nprocess very similar to what you do when working with the `ListView` widget. In this library, \r\nwe have a few base adapters to help you create picture slide shows easily from images in your\r\napplication resources or from images on the Internet. The code would look like that:\r\n\r\n    adapter = new ResourceBitmapAdapter(this, new int[]{\r\n        R.raw.slide_01, R.raw.slide_02, R.raw.slide_03, R.raw.slide_04});\r\n\r\nOnce your activity is ready, or inside an event handler like a button click method, you can then \r\nstart the slideshow:\r\n\r\n    slideShowView.play();\r\n\r\n## Customisable components\r\n\r\n### SlideShowAdapter\r\n\r\nThis is the key component to bind your slide data with actual view widgets. Have you heard about \r\n`ListView` and `Adapter`? Well, this is exactly the same concept. \r\n\r\nTo get you started with picture slide shows, we have created a few useful adapters:\r\n\r\n  - `ResourceBitmapAdapter` will allow you to show a list of application resource drawables\r\n  - `RemoteBitmapAdapter` will allow you to show a list of images that are loaded from the \r\n    Internet.\r\n   \r\n### SlideTransitionFactory\r\n\r\nYou want something else than just a fade between slides? Simply implement this interface to return \r\nwhichever view animator you want. \r\n\r\nTo make it easy for you, we already have a few default implementations that should cover most of \r\nyour needs:\r\n \r\n  - `FadeTransitionFactory` if you want your slides to fade out and in\r\n  - `SlideAndZoomTransitionFactory` if you want your slides to slide ou left and then zoom in\r\n  - `NoTransitionFactory`  if you want your slides to brutally show up\r\n\r\n### PlayList\r\n\r\nYou want to change the order of your slides? You need your slides to have a variable duration? \r\nWell, that's the interface to implement to change that. \r\n\r\nTo make it easy for you, we already have a few default implementations that should cover most of \r\nyour needs:\r\n\r\n  - `SequentialPlayList` will play slides in order with a common default duration\r\n  - `RandomPlayList` will play slides in a random order with a common default duration\r\n\r\n## About Vincent & MarvinLabs\r\n\r\nI am a freelance developer located in Biarritz, France. You can \r\n[have a look at my website](http://vincentprat.info) to get to know me a little better. If you want \r\nto follow me, here are some links:\r\n\r\n* [Follow me on Twitter](http://twitter.com/vpratfr)\r\n* [Follow me on Google+](https://plus.google.com/+VincentPrat)\r\n* [Follow me on Facebook](http://www.facebook.com/vpratfr)\r\n\r\nMarvinLabs is my digital studio specialised in native mobile applications and web sites. You can \r\n[browse our website](http://www.marvinlabs.com) to get to know us a little better. If you want to \r\nget updates about our work, you can also:\r\n\r\n* [Follow us on Twitter](http://twitter.com/marvinlabs)\r\n* [Follow us on Google+](https://plus.google.com/+Marvinlabs)\r\n* [Follow us on Facebook](http://www.facebook.com/studio.marvinlabs)\r\n\r\n## Change log\r\n\r\n### 0.1.0 (2014-05-31)\r\n\r\n  - First release (beta)\r\n  - SlideShowView widget to play a slide show\r\n  - SlideTransitionFactory to customize the transitions between slides (with 2 default \r\n    implementations)\r\n  - PlayList to customize the order and duration of slides (with 1 default implementations)\r\n  - SlideShowAdapter to bind slide data to actual view widgets (with 2 default implementations)\r\n  - Demo application","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}